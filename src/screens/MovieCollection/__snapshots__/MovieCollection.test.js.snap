// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Movie Collection renders correcly with empty route 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flexGrow": 1,
      "justifyContent": "center",
    }
  }
>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    contentContainerStyle={
      Object {
        "flexGrow": 1,
        "paddingVertical": 40,
      }
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexGrow": 1,
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "rgb(28, 28, 30)",
            }
          }
        >
          Nothing here yet
        </Text>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Movie Collection renders correcly with route with data of movie list 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flexGrow": 1,
      "justifyContent": "center",
    }
  }
>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    contentContainerStyle={
      Object {
        "flexGrow": 1,
        "paddingVertical": 40,
      }
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexGrow": 1,
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "rgb(28, 28, 30)",
            }
          }
        >
          Nothing here yet
        </Text>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Movie item component renders correctly and match snapshot 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    accessibilityIgnoresInvertColors={true}
    style={
      Object {
        "height": 150,
        "margin": 1,
        "width": 90,
      }
    }
  >
    <Image
      resizeMode="cover"
      source={
        Object {
          "uri": "undefined/aJbeDPUwDe9MLpseTFrNTBaQPzf.jpg",
        }
      }
      style={
        Array [
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "height": 150,
            "width": 90,
          },
          undefined,
        ]
      }
    />
    <View
      style={
        Object {
          "backgroundColor": undefined,
        }
      }
    >
      <Text
        style={
          Array [
            undefined,
            Object {
              "color": "rgb(28, 28, 30)",
            },
          ]
        }
      >
        Movy Original
      </Text>
    </View>
  </View>
</View>
`;
